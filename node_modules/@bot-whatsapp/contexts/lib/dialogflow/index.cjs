/** 
* NO TOCAR ESTE ARCHIVO: Es generado automaticamente, si sabes lo que haces adelante ;)
* de lo contrario mejor ir a la documentacion o al servidor de discord link.codigoencasa.com/DISCORD
*/
'use strict';

var require$$0 = require('@bot-whatsapp/bot');
var require$$1 = require('@google-cloud/dialogflow');
var require$$2 = require('fs');
var require$$3 = require('path');

const { CoreClass } = require$$0;
const dialogflow$1 = require$$1;
const { existsSync, readFileSync } = require$$2;
const { join } = require$$3;

/**
 * Necesita extender de core.class
 * handleMsg(messageInComming) //   const { body, from } = messageInComming
 */

const GOOGLE_ACCOUNT_PATH = join(process.cwd(), 'google-key.json');

class DialogFlowContext extends CoreClass {
    projectId = null
    configuration = null
    sessionClient = null
    optionsDX = {
        language: 'es',
    }

    constructor(_database, _provider, _optionsDX = {}) {
        super(null, _database, _provider);
        this.optionsDX = { ...this.optionsDX, ..._optionsDX };
        this.init();
    }

    /**
     * Verificar conexiÃ³n con servicio de DialogFlow
     */
    init = () => {
        if (!existsSync(GOOGLE_ACCOUNT_PATH)) {
            console.log(`[ERROR]: No se encontro ${GOOGLE_ACCOUNT_PATH}`);
            /**
             * Emitir evento de error para que se mueste por consola dicinedo que no tiene el json
             *  */
        }

        const rawJson = readFileSync(GOOGLE_ACCOUNT_PATH, 'utf-8');
        const { project_id, private_key, client_email } = JSON.parse(rawJson);

        this.projectId = project_id;
        this.configuration = {
            credentials: {
                private_key,
                client_email,
            },
        };

        this.sessionClient = new dialogflow$1.SessionsClient(this.configuration);
    }

    /**
     * GLOSSARY.md
     * @param {*} messageCtxInComming
     * @returns
     */
    handleMsg = async (messageCtxInComming) => {
        const languageCode = this.optionsDX.language;
        const { from, body } = messageCtxInComming;

        let customPayload = {};

        /**
         * ðŸ“„ Creamos session de contexto basado en el numero de la persona
         * para evitar este problema.
         * https://github.com/codigoencasa/bot-whatsapp/pull/140
         */
        const session = this.sessionClient.projectAgentSessionPath(this.projectId, from);
        const reqDialog = {
            session,
            queryInput: {
                text: {
                    text: body,
                    languageCode,
                },
            },
        };

        const [single] = (await this.sessionClient.detectIntent(reqDialog)) || [null];

        const { queryResult } = single;

        const msgPayload = queryResult?.fulfillmentMessages?.find((a) => a.message === 'payload');

        // Revisamos si el dialogFlow tiene multimedia
        if (msgPayload && msgPayload?.payload) {
            const { fields } = msgPayload.payload;
            const mapButtons = fields?.buttons?.listValue?.values.map((m) => {
                return { body: m?.structValue?.fields?.body?.stringValue }
            });

            customPayload = {
                options: {
                    media: fields?.media?.stringValue,
                    buttons: mapButtons,
                },
            };

            const ctxFromDX = {
                ...customPayload,
                answer: fields?.answer?.stringValue,
            };
            this.sendFlowSimple([ctxFromDX], from);
            return
        }

        /* const ctxFromDX = {
            answer: queryResult?.fulfillmentText,
        } */

        const messagesFromCX = queryResult['fulfillmentMessages']
            .map((a) => {
                if (a.message === 'text') {
                    return { answer: a.text.text[0] }
                }
            })
            .filter((e) => e);

        this.sendFlowSimple(messagesFromCX, from);
    }
}

var dialogflow_class = DialogFlowContext;

const DialogFlowClass = dialogflow_class;

/**
 * Crear instancia de clase Bot
 * @param {*} args
 * @returns
 */
const createBotDialog = async ({ database, provider }) => new DialogFlowClass(database, provider);

var dialogflow = {
    createBotDialog,
    DialogFlowClass,
};

module.exports = dialogflow;
